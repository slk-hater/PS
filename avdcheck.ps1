#region LAUNCHER
if($null -eq $args[0]) { Exit }
if((Get-ChildItem | Where-Object Name -like "launcher_new.exe").Length -gt 0){
    $root = [System.Environment]::CurrentDirectory
    Remove-Item -Path ($root+"\launcher.exe") -Force
    Rename-Item -Path ($root+"\launcher_new.exe") -NewName ($root+"\launcher.exe") -Force
    Start-Process -FilePath ($root+"\launcher.exe")
    Exit
}
#endregion

#region CONFIGURATION
$ProgressPreference = 'SilentlyContinue'
$minIntelCPUModifier = 3 # Brand modifier
$minIntelCPUClock = 3000 # Megahertz
$intelCPUExceptions = "i3-8020T", "i3-8320T", "i3-8320"
$minAMDCPUModifier = 3 # Brand modifier
$minAMDCPUClock = 3000 # Megahertz
$maxCPULoad = 60 # %

$minAvailableRAM = 4096 # Megabytes
$recdAvailableRAM = 8192 # Megabytes

$minDownloadSpeed = 30 # Megabits per second
$minUploadSpeed = 30 # Megabits per second
$maxLatency = 35 # Miliseconds

$forbiddenApps = "UTorrent", "BitTorrent", "Azureus", "Instagram", "Tiktok", "Snapchat", "WhatsApp", 
"FacebookMessenger", "Discord", "Netflix", "HBO", "Steam", "UnrealEngineLauncherProxy", "UE4Game",
"VGK", "Vanguard", "VGC", "VPN", "NordVPN", "ExpressVPN", "Spotify", "Teams", "Outlook", "OBS",
"Vuze", "Chrome", "Twitter", "FireFox", "Opera" 

$linhaApoio = "211 165 545"
$notMetStr = "A verificar se o computador e a internet cumprem os requisitos mínimos estabelecidos no manual de Boas Práticas para o uso do Posto Virtual...", 
"O computador e a internet não cumprem os requisitos mínimos estabelecidos no manual de Boas Práticas, para o uso do Posto Virtual!",
"O computador não cumpre os requisitos mínimos estabelecidos no manual de Boas Práticas para o uso do Posto Virtual!",
"A internet não cumpre os requisitos mínimos estabelecidos no manual de Boas Práticas para o uso do Posto Virtual!"
#endregion

#region UTILS
Function Base64ToImage{
    param ([string]$s)

    $bytes = [Convert]::FromBase64String($s)
    return [System.Drawing.Bitmap]::new([System.IO.MemoryStream]::new($bytes, 0, $bytes.Length))
}
Function Base64ToIcon{
    param ([string]$s)

    return [System.Drawing.Icon]::FromHandle((Base64ToImage($s)).GetHIcon())
}
Function log {
    param
    (
        [Parameter(Mandatory=$true, Position=0)]
        [string] $prefix,
        [Parameter(Mandatory=$true, Position=1)]
        [string] $message
    )
    $logFilePath = $env:LOCALAPPDATA.ToString() + "\MEDICARE\logs.txt"
    if((Test-Path -Path $logFilePath) -eq $False) { New-Item -Path $logFilePath -ItemType File }
    Write-Output "[$prefix - CPU $((Get-CimInstance -Class Win32_Processor).LoadPercentage)% - $(Get-Date -Format "dd/MM/yyyy HH:mm:ss")] : $message" >> $logFilePath
}
#endregion

#region FORM
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
[System.Windows.Forms.Application]::EnableVisualStyles();
$form = New-Object System.Windows.Forms.Form
$form.Text = 'Posto Virtual Requisitos Mínimos'
$form.Size = New-Object System.Drawing.Size(580,440)
$form.StartPosition = 'CenterScreen'
$form.FormBorderStyle = 'FixedSingle'
$form.AutoSizeMode = 'GrowAndShrink'
$form.SizeGripStyle = 'Hide'
$form.AutoScaleMode = 'Dpi'
$form.MaximizeBox = $false
$form.MinimizeBox = $false
$form.BackColor = 'White'
$form.Font = New-Object System.Drawing.Font('Segoe UI', 11, [System.Drawing.FontStyle]::Regular)
$form.Topmost = $true
$form.ShowIcon = $true
$form.Icon = Base64ToIcon('iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAZ2AAAGdgEpJm+AAAAFIGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDUgNzkuMTYzNDk5LCAyMDE4LzA4LzEzLTE2OjQwOjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTktMDQtMTVUMTA6Mzk6NTIrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE5LTA0LTIzVDExOjMwOjAxKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDE5LTA0LTIzVDExOjMwOjAxKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmNiZjE3Mzk2LWM5M2QtNDRlNS04NTk0LWU3OTkxOWMyNjY5MSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpjYmYxNzM5Ni1jOTNkLTQ0ZTUtODU5NC1lNzk5MTljMjY2OTEiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpjYmYxNzM5Ni1jOTNkLTQ0ZTUtODU5NC1lNzk5MTljMjY2OTEiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmNiZjE3Mzk2LWM5M2QtNDRlNS04NTk0LWU3OTkxOWMyNjY5MSIgc3RFdnQ6d2hlbj0iMjAxOS0wNC0xNVQxMDozOTo1MiswMTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTkgKE1hY2ludG9zaCkiLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Z62ROQAAA81JREFUWIW1l11sU2UYx3/v29OuHcONLipzQJifgSCg7sPVbawsmgyJRCMmRG68MzEmJl6YGAObzo8LvTHExHjnR7wgRjcFEiNrgWEJDgmMTMwS44y41dVpt7LZ9vQ8XnRd2Pp1zpj/q57nfZ7n/3/fkz7n/yoRwQ4uNDa646YR1OgnFGwRrHpQ9YAomBBhQjSjiOqPmTOh/VeupOz0VeUEnGlsrMuY7kPAAaDallqIA5+kRL/x2KWzf65IQCQQ8KXm5TWElwQqbRIvRwLh3anM7NvFTqSggIVd9wNNKyRejiGXdj/V/uPpqbICTm8P3G9pOQ5sWCXyHMa1i+6OC5GfigpY2PkPQP0qk+fwq0u7m288CZ37EW4Iei3T/dX/SA6wOWOZXxzdts2TJ4Dq5GGBZtutlMIfaKGyYbNDDdJ+m1H1ymIbEWFwZ6BeI2OAz04L36aNbD/yHr5NGwGYHopw+cWXweZMARKZjNzdNXIuqgG0kh675AB37H9ykRzA39bKuhZHf5gqbajDADrcEPQiHHBSfWtXp61YKSjh4Il79lRoqZnfDaxxUqw9nvxYRX6sDNZW+v7erUHtdVqJUo5LCkG07DOUxVZK9HPX1LDh2WeWvGN39S15ebXtj/Dgxx8BYCauEzsZZuq7QdLxmaK9lWKLCu94+GeBewsl6AoPrd9+XZDQDv6djDL89EHMRKJYypgWqCu2WtvRtmJyAO/62/G3t5ZKqdNQ/AUYa6tWTJ6DWeIVAGiQa8UWo9+cIBX7a8Xkc+O/MR05XyplwlDoa4LcV2jVSqW5+NzzrN/3OP5AC8owAFhz150ol2tJbjo+Q3Iymn0QIR2f4Zf3Pyg5HZWSCRXa0XoE5AUnOwucPIan1r8kNjlwjKuH+py0AeRDbWENOKxyMvNLQlmqX1cbZoish7PPb5q2YmUwOze/blA/NDycBj53UhkLn8mPhfJjZfBZ99jxpAZwGenXFczZrfzj6Jckp2KLz/FLI0yfjTghv46Z6YUbLNmpB1rfFOFVux2Uy0XtrjaSk1FmR686IQdFb+fFSA+AkYt5fKovOSePYtMJSyZDbPCUM+IshqbSs28tailgSs+z+o44h3GXdjcVNKUA7cPDE9pSe4Ci0/FmyLWL7uV3A708q+Py9yMuI92koOQMdQSRSEp08/I7QUEBkD0JiXt3gXoHmL8J6gSK3vk5f7DYHbHs5XRwZ6BeK+lZ8I02rZv8A+rTTEb6ukbORUtllhWQQ7gh6M36R7VXWWxViroFL6GyX1T1u8Co0gxQ7Q13hkK2RuN/DSJ8sReEgaAAAAAASUVORK5CYII=')

$medicareMonoImg = Base64ToImage('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')
$x = 100
$y = $form.Size.Height-90
$pb = New-Object System.Windows.Forms.PictureBox -Property @{
    Name = 'LinhaDeApoioPb'
    Size = New-Object System.Drawing.Size -Property @{
        Width = 185
        Height = 45
    }
    Location = New-Object System.Drawing.Point -Property @{
        X = $x
        Y = $y
    }
    SizeMode = 'Zoom'
    Image = $medicareMonoImg
}
$form.Controls.Add($pb)
$lb = New-Object System.Windows.Forms.Label -Property @{
    Name = 'LabelLinhaApoio'
    Font = New-Object System.Drawing.Font('Cambria', 20, [System.Drawing.FontStyle]::Regular)
    Location = New-Object System.Drawing.Point -Property @{
        X = $x+195
        Y = $y+5
    }
    ForeColor = "#8795a1"
    AutoSize = $true
    Text = $linhaApoio
}
$form.Controls.Add($lb)

$notMetLb = New-Object System.Windows.Forms.Label -Property @{
    Name = 'LabelNotMet'
    Font = New-Object System.Drawing.Font('Segoe UI', 9, [System.Drawing.FontStyle]::Bold)
    Location = New-Object System.Drawing.Point -Property @{
        X = 5
        Y = 20
    }
    ForeColor = 'Black'
    AutoSize = $false
    TextAlign = [System.Windows.Forms.HorizontalAlignment]::Center
    Size = New-Object System.Drawing.Size -Property @{
        Width = 544
        Height = 40
    }
    Visible = $true
    Text = $notMetStr[0]
}
$form.Controls.Add($notMetLb)

$checkedImage = Base64ToImage('iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAMAAADDpiTIAAAAAXNSR0IB2cksfwAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAYBQTFRFAAAAyv+/0vy34fWh9Op4/+FVxug4Y/kqUf0w7u2F7ONHU/0v8eJJ4PWj/+FS/+FT3val6++Nm+4q9+Zt1Pu01OU92uU/0/u10P26vOk0Xfor3PeppO0tquwu0fy4/eNd4+RD4/Sd/+BR8ut9ffQowuk29+Zs9eh1V/wt/+FRhvIolu8p0P252/iq2visffMo/+FW3fan2fiuavgprusw1/qx7e6I5/GU6ONFy+c5/uNZ+uVk/+mF//bJ//nd//K1/+Vq/+l///ja//XL9uFM/++p/+d4s+ox//K2/+Vr1fqy//K3//nboO0s/+iC//K4//bN//jZ8+p6//XE//Cm/+Rn9Ol4/+mG7+yD//XGc/Yp//jW//jY//jX7O6K/+BQ/+Vu/+uR/+l+/+Nh8OuA//Gz//TA/+2W0OY7//fS//XM//O7/++o//O8/+2Z//fT/+2X//bK//fV//O94vSfkvAouOoz/++m//fU/+2a++Rh9+dr++FO/+FU6fGS+eZnYUDslwAAAIB0Uk5TAP////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////9QCrogAAAPt0lEQVR4nO2d6YNURx1F+0EGGjAhEJZhyAAzQYNhhBEIEoytJsbEKAY1cUFNXFCJS1yDEZf8605Pz9LLW+tV1f1V3Xu+54W+5/Q63e8NBt4pRDD82/IKeh4W0J5LQY/CBtr3DOgxWEF7n4BegRvZF9JPj+wL6adH+umRfnqknx7pp0f+2ZF+euSfHulnR/7ZkX565J8d+WdH+umRf3bknx35Z0f+2ZF/duSfHflnR/7ZkX925J8d+WdH/tmRf3YUADnyz478syP/7CgAcuSfHflnRwGQI//syD87CoAc+WdH/tlRAOTIPzsKgBz5Z0cBkCP/7CgAcuSfHQVAjvyzowDIUQDkyD87CoAc+WdHAZCjAMiRf3YUADkKgBz5Z0cBkKMAyFEA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')
$warningImage = Base64ToImage('')
$uncheckedImage = Base64ToImage('')

Function GenerateSteps(){
    $defaultPbY = 90
    $pbX = 30
    $pbY = $defaultPbY
    $lbX = $pbX+35
    $len = 10
    for($i=0; $i -lt $len; $i++){
        $index = $i
        if($i -ge $len/2){
            $index = $i-$len/2
            $pbX = 290
            $pbY = $defaultPbY
            $lbX = $pbX+35
        }
    
        $pb = New-Object System.Windows.Forms.PictureBox -Property @{
            Name = "PictureBoxStep$i"
            Size = New-Object System.Drawing.Size -Property @{
                Width = 32
                Height = 32
            }
            Location = New-Object System.Drawing.Point -Property @{
                X = $pbX
                Y = $pbY+(45*$index)
            }
            SizeMode = 'Zoom'
            Image = $warningImage
        }
        $form.Controls.Add($pb)

        $lb = New-Object System.Windows.Forms.Label -Property @{
            Name = "LabelStep$i"
            Location = New-Object System.Drawing.Point -Property @{
                X = $lbX
                Y = ($pbY+5)+(45*$index)
            }
            BackColor = 'Transparent'
            AutoSize = $true
        }
        switch($i){
            0 { $lb.Text = "Processador" }
            1 { $lb.Text = "Memória RAM" }
            2 { $lb.Text = "Áudio de Alta Definição" }
            3 { $lb.Text = "USB para Headsets" }
            4 { $lb.Text = "Sistema Operativo" }
            
            5 { $lb.Text = "Antivírus" }
            6 { $lb.Text = "Velocidade Download" }
            7 { $lb.Text = "Velocidade Upload" }
            8 { $lb.Text = "Latência" }
            9 { $lb.Text = "Aplicações impactantes" }
        }
        $form.Controls.Add($lb)
    }

    $minLbXGap = 6
    $minLbYGap = 24
    $minLbForeColor = '#AE1022'
    $minLbFont = New-Object System.Drawing.Font('Segoe UI', 8, [System.Drawing.FontStyle]::Bold)
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel0"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep0', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep0', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Mínimo i" + $minIntelCPUModifier + " e " + [math]::round($minIntelCPUClock/1000, 2) + "GHz"
        Visible = $false
    }
    $form.Controls.Add($minLb)
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel1"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep1', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep1', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Mínimo " + [math]::round($minAvailableRAM/1024, 2) + "GB (Recomendado " + [math]::round($recdAvailableRAM/1024, 2) + "GB)"
        Visible = $false
    }
    $form.Controls.Add($minLb)
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel4"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep4', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep4', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Windows 10 ou superior"
        Visible = $false
    }
    $form.Controls.Add($minLb)
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel5"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep5', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep5', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Antivírus em serviço e atualizado"
        Visible = $false
    }
    $form.Controls.Add($minLb)
    
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel6"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep6', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep6', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Mínimo " + $minDownloadSpeed + "Mbps"
        Visible = $false
    }
    $form.Controls.Add($minLb)
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel7"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep7', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep7', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Mínimo " + $minUploadSpeed + "Mbps"
        Visible = $false
    }
    $form.Controls.Add($minLb)
    $minLb = New-Object System.Windows.Forms.Label -Property @{
        Name = "MinimumLabel8"
        Location = New-Object System.Drawing.Point -Property @{
            X = $form.Controls.Find('LabelStep8', $true)[0].Location.X+$minLbXGap
            Y = $form.Controls.Find('LabelStep8', $true)[0].Location.Y+$minLbYGap
        }
        ForeColor = $minLbForeColor
        Font = $minLbFont
        AutoSize = $true
        Text = "* Máximo " + $maxLatency + "ms"
        Visible = $false
    }
    $form.Controls.Add($minLb)
}
GenerateSteps
#endregion

#region SCRIPT LOGIC
$global:pc = $true
$global:internet = $true
$global:apps = $true
$global:forms = New-Object System.Collections.Generic.List[System.Windows.Forms.Form]
Function CheckHardware {
    log "MAIN" "Checking hardware..."

    #region CPU
    $processorInfo = (Get-CimInstance -Class Win32_Processor)
    $cpuName = $processorInfo.Name
    $cpuPerformancePercentage = ((Get-WmiObject -Class Win32_PerfFormattedData_Counters_ProcessorInformation).PercentProcessorPerformance | Measure-Object -Maximum).Maximum
    $cpuBaseClock = $processorInfo.MaxClockSpeed
    $cpuCurrentClock = $processorInfo.CurrentClockSpeed
    if($cpuPerformancePercentage -gt 100) { $cpuCurrentClock = ($cpuPerformancePercentage*$cpuBaseClock)/100 }
    $cpuLoad = $processorInfo.LoadPercentage

    $intel = $cpuName.Contains("Intel")
    $amd = $cpuName.Contains("AMD")
    if($intel){
        $cpuShortName = [regex]::new("i\d-\d+.").Match($cpuName).Value
        $cpuModifier = [regex]::new("(?<=i)\d+").Match($cpuName).Value
        $cpuGen = [regex]::new("-(\d+)").Match($cpuName).Value
        $cpuGen = [int]$cpuGen.Substring(1, $cpuGen.Length-1)
        $minLb = $form.Controls.Find("MinimumLabel0", $true)[0]
        if($cpuShortName -ne ""){
            $form.Controls.Find('LabelStep0', $true)[0].Text += " (i$cpuModifier@" + [math]::round($cpuCurrentClock/1000, 2) + "GHz)"
            $form.Controls.Find('PictureBoxStep0', $true)[0].Image = $uncheckedImage
            if($cpuGen -ge 8000){
                $minIntelCPUClock = $cpuBaseClock;
                foreach($exception in $intelCPUExceptions){
                    if($cpuShortName -eq $exception){ $minIntelCPUClock = 3000 }
                }
            }
            if($cpuModifier -gt $minIntelCPUModifier) { $minIntelCPUClock = 2300; }

            #if($cpuModifier -eq $minIntelCPUModifier) { $minIntelCPUClock = 3000; }
            #elseif($cpuModifier -gt $minIntelCPUModifier -and $cpuGen -gt 8000) { $minIntelCPUClock = $cpuBaseClock; }
            #elseif($cpuModifier -gt $minIntelCPUModifier) { $minIntelCPUClock = 1800; }

            if($cpuModifier -ge $minIntelCPUModifier -and $cpuCurrentClock -lt $minIntelCPUClock){$minLb.Text = "* Mínimo " + ([math]::round($minIntelCPUClock/1000, 2)).ToString("0.0").Replace(',', '.') + "GHz"}
            elseif($cpuModifier -lt $minIntelCPUModifier -and $cpuCurrentClock -ge $minIntelCPUClock){$minLb.Text = "* Mínimo i" + $minIntelCPUModifier}
        } else {
            $minLb.Text = "* Processador compatível"
        }
    } elseif($amd) { 
        $cpuModifier = [regex]::new("(?<=Ryzen )\d+").Match($cpuName).Value
        $cpuGen = [regex]::new("(?<=Ryzen \d\s)\d+").Match($cpuName).Value
        $minLb = $form.Controls.Find("MinimumLabel0", $true)[0]
        if($cpuModifier -ne ""){
            $form.Controls.Find('LabelStep0', $true)[0].Text += " (Ryzen $cpuModifier@" + [math]::round($cpuCurrentClock/1000, 2) + "GHz)"
            $form.Controls.Find('PictureBoxStep0', $true)[0].Image = $uncheckedImage

            $minLb.Text = "* Mínimo Ryzen " + $minAMDCPUModifier + " e " + ([math]::round($minAMDCPUClock/1000, 2)).ToString("0.0").Replace(',', '.') + "GHz"
            if($cpuModifier -ge $minIntelCPUModifier -and $cpuCurrentClock -lt $minIntelCPUClock){$minLb.Text = "* Mínimo " + ([math]::round($minAMDCPUClock/1000, 2)).ToString("0.0").Replace(',', '.') + "GHz"}
            elseif($cpuModifier -lt $minIntelCPUModifier -and $cpuCurrentClock -ge $minIntelCPUClock){$minLb.Text = "* Mínimo Ryzen " + $minAMDCPUModifier}
        } else {
            $minLb.Text = "* Processador compatível"
        }
    }
    if($cpuLoad -gt $maxCPULoad){
        $lb = $form.Controls.Find('MinimumLabel0', $true)[0]
        $lb.ForeColor = '#AE1022'
        $lb.Text = "Processador está sobrecarregado (" + $cpuLoad + "%)"
        $lb.Visible = $true
        $form.Controls.Find('PictureBoxStep0', $true)[0].Image = $uncheckedImage
        $global:pc = $false
    }
    if($intel -and $cpuModifier -ge $minIntelCPUModifier -and $cpuCurrentClock -ge $minIntelCPUClock -and $cpuLoad -le $maxCPULoad){$form.Controls.Find('PictureBoxStep0', $true)[0].Image = $checkedImage}
    elseif($amd -and $cpuModifier -ge $minAMDCPUModifier -and $cpuCurrentClock -ge $minAMDCPUClock -and $cpuLoad -le $maxCPULoad){$form.Controls.Find('PictureBoxStep0', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('MinimumLabel0', $true)[0].Visible = $true; $global:pc = $false }
    #endregion

    #region RAM
    $totalRam = (Get-CimInstance -Class Win32_PhysicalMemory | Measure-Object Capacity -Sum).Sum / 1MB
    $graphicsRam = (Get-CimInstance -Class Win32_VideoController).AdapterRAM / 1MB
    $availableRam = $totalRam - $graphicsRam
    $form.Controls.Find('LabelStep1', $true)[0].Text += " (" + [math]::round($availableRam/1024) + "GB)"
    if($availableRam -ge $minAvailableRAM -and $availableRam -lt $recdAvailableRAM){
        $form.Controls.Find('PictureBoxStep1', $true)[0].Image = $warningImage
        $form.Controls.Find('MinimumLabel1', $true)[0].ForeColor = 'Gray'
        $form.Controls.Find('MinimumLabel1', $true)[0].Text = "É recomendado ter " + [math]::round($recdAvailableRAM/1024) + "GB"
        $form.Controls.Find('MinimumLabel1', $true)[0].Visible = $true
    }
    if($availableRam -ge $minAvailableRAM){$form.Controls.Find('PictureBoxStep1', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('MinimumLabel1', $true)[0].Visible = $true; $form.Controls.Find('PictureBoxStep0', $true)[0].Image = $uncheckedImage; $global:pc = $false }
    #endregion

    #region DEVICES
    foreach($device in Get-WmiObject -class Win32_SoundDevice){
        if($device.Name -match "High Definition Audio" -and $device.Status -eq "OK"){$highDefinitionAudio = $true}
        if($device.Name -match "USB" -and $device.Status -eq "OK"){$hasHeadsets = $true}
    }
    if($hasHeadsets){ $form.Controls.Find("LabelStep3", $true)[0].Text = "Headsets"; }
    else {
        foreach($usb in Get-PnpDevice -Class USB){
            if($usb.FriendlyName -eq "USB Composite Device"){$usbAvailableForHeadsets = $true}
        }
    }
    if($highDefinitionAudio){$form.Controls.Find('PictureBoxStep2', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('PictureBoxStep2', $true)[0].Image = $uncheckedImage; $global:pc = $false; }
    if($hasHeadsets -or $usbAvailableForHeadsets){$form.Controls.Find('PictureBoxStep3', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('PictureBoxStep2', $true)[0].Image = $uncheckedImage; $global:pc = $false }
    #endregion

    #region OS
    $windowsVersion = (Get-CimInstance Win32_OperatingSystem).Version
    $form.Controls.Find('LabelStep4', $true)[0].Text += " (Win" + $windowsVersion.Split(".")[0] + ")"
    if($windowsVersion -ge 10){$form.Controls.Find('PictureBoxStep4', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('PictureBoxStep4', $true)[0].Image = $uncheckedImage; $form.Controls.Find('MinimumLabel4', $true)[0].Visible = $true; $global:pc = $false }
    #endregion

    #region ANTIVIRUS
    foreach($antivirus in (Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntivirusProduct)){
        $state = $antivirus.productState;
        $hexstate = ('0x{0:x}' -f $state)
        if($hexstate[3] -eq '1') {
            $antivirusEnabled = $true
            $antivirusUpdated = $hexstate[5] -eq '0'
            $form.Controls.Find("LabelStep5", $true)[0].Text += " (" + $antivirus.displayName + ")"
            break
        }
    }
    if($antivirusEnabled -and $antivirusUpdated){$form.Controls.Find('PictureBoxStep5', $true)[0].Image = $checkedImage}
    elseif(!$antivirusEnabled){ 
        $form.Controls.Find('MinimumLabel5', $true)[0].Visible = $true
        $form.Controls.Find('PictureBoxStep5', $true)[0].Image = $uncheckedImage
        $global:pc = $false 
    }
    elseif(!$antivirusUpdated){
        $form.Controls.Find('PictureBoxStep5', $true)[0].Image = $warningImage
        $form.Controls.Find('MinimumLabel5', $true)[0].ForeColor = 'Gray'
        $form.Controls.Find('MinimumLabel5', $true)[0].Text = "É recomendado estar atualizado"
        $form.Controls.Find('MinimumLabel5', $true)[0].Visible = $true
    }
    #endregion
    if(!$global:pc) { log "MAIN" "Hardware check didn't pass!" }
}
Function CheckInternet {
    log "MAIN" "Checking internet..."
    
    $downloadURL = "https://install.speedtest.net/app/cli/ookla-speedtest-1.0.0-win64.zip"
    $outZipPath = $env:HOMEDRIVE+"\Windows\Temp\SpeedTest.zip"
    $extractToPath = $env:HOMEDRIVE+"\Windows\Temp\SpeedTest"
    $speedTestEXEPath = $env:HOMEDRIVE+"\Windows\Temp\SpeedTest\speedtest.exe"

    #region TEST INTERNET CONNECTION
    $valid = Test-Connection -ComputerName google.pt -Quiet
    if(!$valid)
    {
        $form.Controls.Find('MinimumLabel6', $true)[0].Visible = $true
        $form.Controls.Find('MinimumLabel7', $true)[0].Visible = $true
        $form.Controls.Find('MinimumLabel8', $true)[0].Visible = $true
        $form.Controls.Find('PictureBoxStep6', $true)[0].Image = $uncheckedImage
        $form.Controls.Find('PictureBoxStep7', $true)[0].Image = $uncheckedImage
        $form.Controls.Find('PictureBoxStep8', $true)[0].Image = $uncheckedImage
        $global:internet = $false
        return
    }
    #endregion

    #region SPEED TEST LOGIC
    Invoke-WebRequest -URI $downloadURL -OutFile $outZipPath
    Add-Type -AssemblyName System.IO.Compression.FileSystem
    try { [System.IO.Compression.ZipFile]::ExtractToDirectory($outZipPath, $extractToPath) }
    catch {
        $e = $_.Exception
        $line = $_.InvocationInfo.ScriptLineNumber
        $msg = $e.Message
        log "MAIN" "$msg Line $line"
    }
    $res = & $speedTestEXEPath --accept-gdpr --accept-license --format=json-pretty | ConvertFrom-Json

    $downloadSpeed = [math]::Round($res.download.bandwidth/131072)
    $uploadSpeed = [math]::Round($res.upload.bandwidth/131072)
    $latency = [math]::Round($res.ping.latency)
    
    if($downloadSpeed -ge $minDownloadSpeed){$form.Controls.Find('PictureBoxStep6', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('PictureBoxStep6', $true)[0].Image = $uncheckedImage; $form.Controls.Find('MinimumLabel6', $true)[0].Visible = $true; $global:internet = $false }
    if($uploadSpeed -ge $minUploadSpeed){$form.Controls.Find('PictureBoxStep7', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('PictureBoxStep7', $true)[0].Image = $uncheckedImage; $form.Controls.Find('MinimumLabel7', $true)[0].Visible = $true; $global:internet = $false }
    if($latency -lt $maxLatency){$form.Controls.Find('PictureBoxStep8', $true)[0].Image = $checkedImage}
    else { $form.Controls.Find('PictureBoxStep8', $true)[0].Image = $uncheckedImage; $form.Controls.Find('MinimumLabel8', $true)[0].Visible = $true; $global:internet = $false }

    $form.Controls.Find('LabelStep6', $true)[0].Text += " (" + $downloadSpeed + "Mbps)"
    $form.Controls.Find('LabelStep7', $true)[0].Text += " (" + $uploadSpeed + "Mbps)"
    $form.Controls.Find('LabelStep8', $true)[0].Text += " (" + $latency + "ms)"
    Remove-Item -Path $outZipPath -Force -ErrorAction Continue
    Remove-Item -Path $extractToPath -Recurse -Force -ErrorAction Continue
    #endregion

    if(!$global:internet) { log "MAIN" "Internet check didn't passed!" }
}
Function CheckApps {
    log "MAIN" "Checking applications..."

    #region FORBIDDEN APPS
    foreach ($app in $forbiddenApps) {
        if((Get-Process | Where-Object name -like "*$app*").length -gt 0){
            if($openedApps.length -gt 0) { $openedApps += ", " + $app }
            else { $openedApps += $app }
        }
    }
    if($openedApps.length -eq 0){ 
        log "MAIN" "No forbidden apps found opened"
        $form.Controls.Find('PictureBoxStep9', $true)[0].Image = $checkedImage
    }
    else {
        log "MAIN" "Forbidden apps found opened ($openedApps)" 
        $form.Topmost = $false
        if($openedApps.Length -eq 1) { $res = [System.Windows.Forms.MessageBox]::Show("$openedApps. Esta aplicação é impactante para o uso do Posto Virutal e deve estar encerrada, pretende encerrá-la?", "Aplicações impactantes", [System.Windows.Forms.MessageBoxButtons]::YesNo, [System.Windows.Forms.MessageBoxIcon]::Question) }
        else { $res = [System.Windows.Forms.MessageBox]::Show("$openedApps. Estas aplicações são impactantes para o uso do Posto Virutal e devem estar encerradas, pretende encerrá-las?", "Aplicações impactantes", [System.Windows.Forms.MessageBoxButtons]::YesNo, [System.Windows.Forms.MessageBoxIcon]::Question) }
        if ($res -eq 'Yes') {
            log "MAIN" "User accepted to close forbidden apps" 
            $form.Controls.Find('PictureBoxStep9', $true)[0].Image = $checkedImage
            foreach ($app in $forbiddenApps) {
                $process = (Get-Process | Where-Object name -like "*$app*")
                if($process.length -gt 0){ Stop-Process -ID $process.Id -Force }
            }
            $global:apps = $true
        }
        else { 
            log "MAIN" "User declined to close forbidden apps"
            $form.Controls.Find('PictureBoxStep9', $true)[0].Image = $uncheckedImage
            $global:pc = $false
            $global:apps = $false
        }
    }
    #endregion

    if(!$global:apps) { log "MAIN" "Applications check didn't passed!" }
}
Function Run(){
    CheckHardware
    if($global:pc){
        CheckInternet
        if($global:internet){
            CheckApps
            if($global:apps){
                $form.Controls.Find("LabelNotMet", $true)[0].Text = "A verificar se há atualizações para o Remote Desktop Client..."
                if((winget list "Remote Desktop").Contains("Version")){ $version = (winget list "Remote Desktop" | Select-Object -Last 1).Replace(" winget", "") }
                else{ $version = (winget list "Área de Trabalho Remota" | Select-Object -Last 1).Replace(" winget", "") }
                if($null -ne $version) { $version = ($version.substring($version.LastIndexOf(" "),$version.Length - $version.LastIndexOf(" "))).Trim() }
                if($version -match "\d+"){ log "MAIN" "Current version of Remote Desktop Client: $version" }
                else{ 
                    log "MAIN" "Remote Desktop Client is not installed!" 
                    $form.Controls.Find("LabelNotMet", $true)[0].Text = "A instalar o Remote Desktop Client, por favor aguarde..."
                }
                
                $response = Invoke-WebRequest -URI "https://go.microsoft.com/fwlink/?linkid=2139369" -UseBasicParsing
                $contentDisposition = $response.Headers.'Content-Disposition'
                $fileName = $contentDisposition.Split('=')[1].Replace('"','')
                $newestVersion = $fileName.Replace("RemoteDesktop_", "").Replace("_x64.msi", "")
                log "MAIN" "Newest version of Remote Desktop Client: $newestVersion"
                
                if($version -ne $newestVersion){
                    log "MAIN" "Update available! Trying to update..."
                    $temp = $env:HOMEDRIVE+"\Windows\Temp\avd.msi"
                    $form.Controls.Find("LabelNotMet", $true)[0].Text = "A atualizar o Remote Desktop Client, por favor aguarde..."
                    Invoke-WebRequest -URI "https://go.microsoft.com/fwlink/?linkid=2139369" -OutFile $temp
                
                    Stop-Process -Name "msrdcw" -Force -ErrorAction SilentlyContinue
                    msiexec /i $temp /qn ALLUSERS=2 MSIINSTALLPERUSER=1
                    Start-Sleep -Seconds 20
                    Remove-Item -Path $temp
                    log "MAIN" "Updated to newest version!"
                }
                else { log "MAIN" "No update available!" }
                $path = ($env:LOCALAPPDATA.ToString() + "\Programs\Remote Desktop\msrdcw.exe")
                Start-Process -FilePath $path
                Start-Sleep -Seconds 5

                #region MONITOR MODE
                log "MAIN" "Entered MONITOR mode!"
                $form.Hide()
                $connected = $false
                while($true){
                    if((Get-Process | Where-Object name -eq "msrdcw").length -eq 0 -and (Get-Process | Where-Object name -eq "msrdc").length -eq 0){ break }
                    if(!$connected -and (Get-Process | Where-Object name -eq "msrdc").length -gt 0){
                        $connected = $true
                        log "REMOTE DESKTOP" "Remote connection to PC started"
                    }
                    elseif($connected -and (Get-Process | Where-Object name -eq "msrdc").length -eq 0){
                        $connected = $false
                        log "REMOTE DESKTOP" "Remote connection to PC closed"
                    }
                    if($connected){
                        foreach ($app in $forbiddenApps) {
                            $process = (Get-Process | Where-Object name -like "*$app*")
                            if($process.length -gt 0){
                                log "MONITOR" "Application '$app' was detected opened"
                                $newForm = New-Object System.Windows.Forms.Form
                                $newForm.Text = 'Aplicação impactante'
                                $newForm.Size = New-Object System.Drawing.Size(400,270)
                                $newForm.StartPosition = 'CenterScreen'
                                $newForm.FormBorderStyle = 'FixedSingle'
                                $newForm.AutoSizeMode = 'GrowAndShrink'
                                $newForm.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None
                                $newForm.SizeGripStyle = 'Hide'
                                $newForm.AutoScaleMode = 'Dpi'
                                $newForm.MaximizeBox = $false
                                $newForm.MinimizeBox = $false
                                $newForm.BackColor = 'White'
                                $newForm.Font = New-Object System.Drawing.Font('Segoe UI', 11, [System.Drawing.FontStyle]::Regular)
                                $newForm.Topmost = $true
                                $newForm.ShowIcon = $true
                                $newForm.Icon = Base64ToIcon('iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAZ2AAAGdgEpJm+AAAAFIGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDUgNzkuMTYzNDk5LCAyMDE4LzA4LzEzLTE2OjQwOjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTktMDQtMTVUMTA6Mzk6NTIrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE5LTA0LTIzVDExOjMwOjAxKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDE5LTA0LTIzVDExOjMwOjAxKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmNiZjE3Mzk2LWM5M2QtNDRlNS04NTk0LWU3OTkxOWMyNjY5MSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpjYmYxNzM5Ni1jOTNkLTQ0ZTUtODU5NC1lNzk5MTljMjY2OTEiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpjYmYxNzM5Ni1jOTNkLTQ0ZTUtODU5NC1lNzk5MTljMjY2OTEiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmNiZjE3Mzk2LWM5M2QtNDRlNS04NTk0LWU3OTkxOWMyNjY5MSIgc3RFdnQ6d2hlbj0iMjAxOS0wNC0xNVQxMDozOTo1MiswMTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTkgKE1hY2ludG9zaCkiLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Z62ROQAAA81JREFUWIW1l11sU2UYx3/v29OuHcONLipzQJifgSCg7sPVbawsmgyJRCMmRG68MzEmJl6YGAObzo8LvTHExHjnR7wgRjcFEiNrgWEJDgmMTMwS44y41dVpt7LZ9vQ8XnRd2Pp1zpj/q57nfZ7n/3/fkz7n/yoRwQ4uNDa646YR1OgnFGwRrHpQ9YAomBBhQjSjiOqPmTOh/VeupOz0VeUEnGlsrMuY7kPAAaDallqIA5+kRL/x2KWzf65IQCQQ8KXm5TWElwQqbRIvRwLh3anM7NvFTqSggIVd9wNNKyRejiGXdj/V/uPpqbICTm8P3G9pOQ5sWCXyHMa1i+6OC5GfigpY2PkPQP0qk+fwq0u7m288CZ37EW4Iei3T/dX/SA6wOWOZXxzdts2TJ4Dq5GGBZtutlMIfaKGyYbNDDdJ+m1H1ymIbEWFwZ6BeI2OAz04L36aNbD/yHr5NGwGYHopw+cWXweZMARKZjNzdNXIuqgG0kh675AB37H9ykRzA39bKuhZHf5gqbajDADrcEPQiHHBSfWtXp61YKSjh4Il79lRoqZnfDaxxUqw9nvxYRX6sDNZW+v7erUHtdVqJUo5LCkG07DOUxVZK9HPX1LDh2WeWvGN39S15ebXtj/Dgxx8BYCauEzsZZuq7QdLxmaK9lWKLCu94+GeBewsl6AoPrd9+XZDQDv6djDL89EHMRKJYypgWqCu2WtvRtmJyAO/62/G3t5ZKqdNQ/AUYa6tWTJ6DWeIVAGiQa8UWo9+cIBX7a8Xkc+O/MR05XyplwlDoa4LcV2jVSqW5+NzzrN/3OP5AC8owAFhz150ol2tJbjo+Q3Iymn0QIR2f4Zf3Pyg5HZWSCRXa0XoE5AUnOwucPIan1r8kNjlwjKuH+py0AeRDbWENOKxyMvNLQlmqX1cbZoish7PPb5q2YmUwOze/blA/NDycBj53UhkLn8mPhfJjZfBZ99jxpAZwGenXFczZrfzj6Jckp2KLz/FLI0yfjTghv46Z6YUbLNmpB1rfFOFVux2Uy0XtrjaSk1FmR686IQdFb+fFSA+AkYt5fKovOSePYtMJSyZDbPCUM+IshqbSs28tailgSs+z+o44h3GXdjcVNKUA7cPDE9pSe4Ci0/FmyLWL7uV3A708q+Py9yMuI92koOQMdQSRSEp08/I7QUEBkD0JiXt3gXoHmL8J6gSK3vk5f7DYHbHs5XRwZ6BeK+lZ8I02rZv8A+rTTEb6ukbORUtllhWQQ7gh6M36R7VXWWxViroFL6GyX1T1u8Co0gxQ7Q13hkK2RuN/DSJ8sReEgaAAAAAASUVORK5CYII=')
                                $global:forms.Add($newForm)

                                $lb = New-Object System.Windows.Forms.Label -Property @{
                                    Name = 'Label1'
                                    Font = New-Object System.Drawing.Font('Segoe UI', 20, [System.Drawing.FontStyle]::Bold)
                                    Location = New-Object System.Drawing.Point -Property @{
                                        X = 50
                                        Y = 40
                                    }
                                    ForeColor = "#AE1022"
                                    AutoSize = $true
                                    Text = "Aplicação impactante"
                                }
                                $newForm.Controls.Add($lb)
                                $lb = New-Object System.Windows.Forms.Label -Property @{
                                    Name = 'Label2'
                                    Font = New-Object System.Drawing.Font('Segoe UI', 12, [System.Drawing.FontStyle]::Bold)
                                    Location = New-Object System.Drawing.Point -Property @{
                                        X = 0
                                        Y = $lb.Location.Y+40
                                    }
                                    ForeColor = "#AE1022"
                                    Size = New-Object System.Drawing.Size -Property @{
                                        Width = $newForm.Width
                                        Height = 20
                                    }
                                    TextAlign = [System.Windows.Forms.HorizontalAlignment]::Center
                                    Text = "Permite que a seguinte aplicação seja encerrada?"
                                }
                                $newForm.Controls.Add($lb)
                                $lb = New-Object System.Windows.Forms.Label -Property @{
                                    Name = 'Label2'
                                    Font = New-Object System.Drawing.Font('Segoe UI', 13, [System.Drawing.FontStyle]::Regular)
                                    Location = New-Object System.Drawing.Point -Property @{
                                        X = 0
                                        Y = $lb.Location.Y+30
                                    }
                                    ForeColor = "#AE1022"
                                    Size = New-Object System.Drawing.Size -Property @{
                                        Width = $newForm.Width-20
                                        Height = 40
                                    }
                                    TextAlign = [System.Windows.Forms.HorizontalAlignment]::Center
                                    Text = $app
                                }
                                $newForm.Controls.Add($lb)

                                $pb = New-Object System.Windows.Forms.PictureBox -Property @{
                                    Name = 'PictureBox1'
                                    Size = New-Object System.Drawing.Size -Property @{
                                        Width = 45
                                        Height = 45
                                    }
                                    Location = New-Object System.Drawing.Point -Property @{
                                        X = 90
                                        Y = 160
                                    }
                                    SizeMode = 'Zoom'
                                    Image = $uncheckedImage
                                }
                                $pb.Add_Click({
                                    $newForm.Close()
                                    log "MONITOR" "User declined to close '$app'"

                                    $newForm = New-Object System.Windows.Forms.Form
                                    $newForm.Text = 'Aplicação impactante'
                                    $newForm.Size = New-Object System.Drawing.Size(400,300)
                                    $newForm.StartPosition = 'CenterScreen'
                                    $newForm.FormBorderStyle = 'FixedSingle'
                                    $newForm.AutoSizeMode = 'GrowAndShrink'
                                    $newForm.FormBorderStyle = [System.Windows.Forms.FormBorderStyle]::None
                                    $newForm.SizeGripStyle = 'Hide'
                                    $newForm.AutoScaleMode = 'Dpi'
                                    $newForm.MaximizeBox = $false
                                    $newForm.MinimizeBox = $false
                                    $newForm.BackColor = 'White'
                                    $newForm.Font = New-Object System.Drawing.Font('Segoe UI', 11, [System.Drawing.FontStyle]::Regular)
                                    $newForm.Topmost = $true
                                    $newForm.ShowIcon = $true
                                    $newForm.Icon = Base64ToIcon('iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAZ2AAAGdgEpJm+AAAAFIGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNS42LWMxNDUgNzkuMTYzNDk5LCAyMDE4LzA4LzEzLTE2OjQwOjIyICAgICAgICAiPiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxOSAoTWFjaW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTktMDQtMTVUMTA6Mzk6NTIrMDE6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE5LTA0LTIzVDExOjMwOjAxKzAxOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDE5LTA0LTIzVDExOjMwOjAxKzAxOjAwIiBkYzpmb3JtYXQ9ImltYWdlL3BuZyIgcGhvdG9zaG9wOkNvbG9yTW9kZT0iMyIgcGhvdG9zaG9wOklDQ1Byb2ZpbGU9InNSR0IgSUVDNjE5NjYtMi4xIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmNiZjE3Mzk2LWM5M2QtNDRlNS04NTk0LWU3OTkxOWMyNjY5MSIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpjYmYxNzM5Ni1jOTNkLTQ0ZTUtODU5NC1lNzk5MTljMjY2OTEiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpjYmYxNzM5Ni1jOTNkLTQ0ZTUtODU5NC1lNzk5MTljMjY2OTEiPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmNiZjE3Mzk2LWM5M2QtNDRlNS04NTk0LWU3OTkxOWMyNjY5MSIgc3RFdnQ6d2hlbj0iMjAxOS0wNC0xNVQxMDozOTo1MiswMTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTkgKE1hY2ludG9zaCkiLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+Z62ROQAAA81JREFUWIW1l11sU2UYx3/v29OuHcONLipzQJifgSCg7sPVbawsmgyJRCMmRG68MzEmJl6YGAObzo8LvTHExHjnR7wgRjcFEiNrgWEJDgmMTMwS44y41dVpt7LZ9vQ8XnRd2Pp1zpj/q57nfZ7n/3/fkz7n/yoRwQ4uNDa646YR1OgnFGwRrHpQ9YAomBBhQjSjiOqPmTOh/VeupOz0VeUEnGlsrMuY7kPAAaDallqIA5+kRL/x2KWzf65IQCQQ8KXm5TWElwQqbRIvRwLh3anM7NvFTqSggIVd9wNNKyRejiGXdj/V/uPpqbICTm8P3G9pOQ5sWCXyHMa1i+6OC5GfigpY2PkPQP0qk+fwq0u7m288CZ37EW4Iei3T/dX/SA6wOWOZXxzdts2TJ4Dq5GGBZtutlMIfaKGyYbNDDdJ+m1H1ymIbEWFwZ6BeI2OAz04L36aNbD/yHr5NGwGYHopw+cWXweZMARKZjNzdNXIuqgG0kh675AB37H9ykRzA39bKuhZHf5gqbajDADrcEPQiHHBSfWtXp61YKSjh4Il79lRoqZnfDaxxUqw9nvxYRX6sDNZW+v7erUHtdVqJUo5LCkG07DOUxVZK9HPX1LDh2WeWvGN39S15ebXtj/Dgxx8BYCauEzsZZuq7QdLxmaK9lWKLCu94+GeBewsl6AoPrd9+XZDQDv6djDL89EHMRKJYypgWqCu2WtvRtmJyAO/62/G3t5ZKqdNQ/AUYa6tWTJ6DWeIVAGiQa8UWo9+cIBX7a8Xkc+O/MR05XyplwlDoa4LcV2jVSqW5+NzzrN/3OP5AC8owAFhz150ol2tJbjo+Q3Iymn0QIR2f4Zf3Pyg5HZWSCRXa0XoE5AUnOwucPIan1r8kNjlwjKuH+py0AeRDbWENOKxyMvNLQlmqX1cbZoish7PPb5q2YmUwOze/blA/NDycBj53UhkLn8mPhfJjZfBZ99jxpAZwGenXFczZrfzj6Jckp2KLz/FLI0yfjTghv46Z6YUbLNmpB1rfFOFVux2Uy0XtrjaSk1FmR686IQdFb+fFSA+AkYt5fKovOSePYtMJSyZDbPCUM+IshqbSs28tailgSs+z+o44h3GXdjcVNKUA7cPDE9pSe4Ci0/FmyLWL7uV3A708q+Py9yMuI92koOQMdQSRSEp08/I7QUEBkD0JiXt3gXoHmL8J6gSK3vk5f7DYHbHs5XRwZ6BeK+lZ8I02rZv8A+rTTEb6ukbORUtllhWQQ7gh6M36R7VXWWxViroFL6GyX1T1u8Co0gxQ7Q13hkK2RuN/DSJ8sReEgaAAAAAASUVORK5CYII=')
                                    $global:forms.Add($newForm)

                                    $lb = New-Object System.Windows.Forms.Label -Property @{
                                        Name = 'Label1'
                                        Font = New-Object System.Drawing.Font('Segoe UI', 20, [System.Drawing.FontStyle]::Bold)
                                        Location = New-Object System.Drawing.Point -Property @{
                                            X = 50
                                            Y = 40
                                        }
                                        ForeColor = "#AE1022"
                                        AutoSize = $true
                                        Text = "Aplicação impactante"
                                    }
                                    $newForm.Controls.Add($lb)
                                    $lb = New-Object System.Windows.Forms.Label -Property @{
                                        Name = 'Label2'
                                        Font = New-Object System.Drawing.Font('Segoe UI', 12, [System.Drawing.FontStyle]::Bold)
                                        Location = New-Object System.Drawing.Point -Property @{
                                            X = 0
                                            Y = $lb.Location.Y+40
                                        }
                                        ForeColor = "#AE1022"
                                        Size = New-Object System.Drawing.Size -Property @{
                                            Width = $newForm.Width
                                            Height = 65
                                        }
                                        TextAlign = [System.Windows.Forms.HorizontalAlignment]::Center
                                        Text = "O Posto Virtual irá ser encerrado caso a aplicação não seja encerrada! Permite que a seguinte aplicação seja encerrada?"
                                    }
                                    $newForm.Controls.Add($lb)
                                    $lb = New-Object System.Windows.Forms.Label -Property @{
                                        Name = 'Label2'
                                        Font = New-Object System.Drawing.Font('Segoe UI', 13, [System.Drawing.FontStyle]::Regular)
                                        Location = New-Object System.Drawing.Point -Property @{
                                            X = 0
                                            Y = $lb.Location.Y+70
                                        }
                                        ForeColor = "#AE1022"
                                        Size = New-Object System.Drawing.Size -Property @{
                                            Width = $newForm.Width-20
                                            Height = 40
                                        }
                                        TextAlign = [System.Windows.Forms.HorizontalAlignment]::Center
                                        Text = $app
                                    }
                                    $newForm.Controls.Add($lb)
                                    $pb = New-Object System.Windows.Forms.PictureBox -Property @{
                                        Name = 'PictureBox1'
                                        Size = New-Object System.Drawing.Size -Property @{
                                            Width = 45
                                            Height = 45
                                        }
                                        Location = New-Object System.Drawing.Point -Property @{
                                            X = 90
                                            Y = 210
                                        }
                                        SizeMode = 'Zoom'
                                        Image = $uncheckedImage
                                    }
                                    $pb.Add_Click({
                                        Stop-Process -Name "msrdc" -Force
                                        log "MONITOR" "User declined to close '$app' on second attempt, closed Remote Desktop"
                                        $newForm.Close()
                                    })
                                    $newForm.Controls.Add($pb)
                                    $pb = New-Object System.Windows.Forms.PictureBox -Property @{
                                        Name = 'PictureBox2'
                                        Size = New-Object System.Drawing.Size -Property @{
                                            Width = 45
                                            Height = 45
                                        }
                                        Location = New-Object System.Drawing.Point -Property @{
                                            X = 250
                                            Y = 210
                                        }
                                        SizeMode = 'Zoom'
                                        Image = $checkedImage
                                    }
                                    $pb.Add_Click({ 
                                        Stop-Process -Name $process.Name -Force
                                        log "MONITOR" "User accepted to close '$app' on second attempt"
                                        $newForm.Close()
                                    })
                                    $newForm.Controls.Add($pb)
                                    $newForm.ShowDialog() | Out-Null
                                })
                                $newForm.Controls.Add($pb)
                                $pb = New-Object System.Windows.Forms.PictureBox -Property @{
                                    Name = 'PictureBox2'
                                    Size = New-Object System.Drawing.Size -Property @{
                                        Width = 45
                                        Height = 45
                                    }
                                    Location = New-Object System.Drawing.Point -Property @{
                                        X = 250
                                        Y = 160
                                    }
                                    SizeMode = 'Zoom'
                                    Image = $checkedImage
                                }
                                $pb.Add_Click({ 
                                    Stop-Process -Name $process.Name -Force
                                    log "MONITOR" "User accepted to close '$app'"
                                    $newForm.Close()
                                })
                                $newForm.Controls.Add($pb)
                                $newForm.ShowDialog() | Out-Null
                            }
                        }
                    }
                    Start-Sleep -Seconds 5
                }
                $form.Close()
                $form.Dispose()
                #endregion
            }
        }
    }

    if($form.Visible){
        $notMetLb =  $form.Controls.Find("LabelNotMet", $true)[0]
        if(!$global:pc -and !$global:internet) { 
            $notMetLb.Text = $notMetStr[1] 
            log "MAIN" $notMetStr[1]
        }
        elseif(!$global:pc -and $global:internet) { 
            $notMetLb.Text = $notMetStr[2] 
            log "MAIN" $notMetStr[2]
        }
        elseif($global:pc -and !$global:internet) { 
            $notMetLb.Text = $notMetStr[3] 
            log "MAIN" $notMetStr[3]
        }
        $notMetLb.ForeColor = '#AE1022'
    }
}
#endregion

#region FORM EVENTS
$form.Add_Shown{
    Run
}
$form.Add_Closing{
    param($sender, $e)

    foreach($f in $global:forms){
        $f.Close()
        $f.Dispose()
    }
}
#endregion

$form.ShowDialog() | Out-Null

$form.Dispose()
